// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Motobug Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer
private alias object.value1 : object.startPos.x
private alias object.value2 : object.startPos.y
private alias object.value3 : object.exhaustTimer

// Player aliases
private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

private alias 0 : MOTOBUG_MOVING
private alias 1 : MOTOBUG_PAUSED

private alias 0 : MOTOBUG_ANI_MOVING
private alias 1 : MOTOBUG_ANI_IDLE


// ========================
// Function Declarations
// ========================

reserve function Motobug_DebugDraw
reserve function Motobug_DebugSpawn


// ========================
// Function Definitions
// ========================

private function Motobug_DebugDraw
	DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
end function


private function Motobug_DebugSpawn
	CreateTempObject(TypeName[Motobug], 0, object.xpos, object.ypos)

	GetBit(temp0, object.direction, 0)

	if temp0 == false
		object[tempObjectPos].direction = FACING_RIGHT
		object[tempObjectPos].xvel = -0x10000
	else
		object[tempObjectPos].direction = FACING_LEFT
		object[tempObjectPos].xvel = 0x10000
	end if
end function


// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case MOTOBUG_MOVING
		object.priority = PRIORITY_ACTIVE

		object.xpos += object.xvel

		// Check object collision
		ObjectTileGrip(0, 0, 15, 0)
		if checkResult == false
			// If on the edge, then pause to turn around
			object.state = MOTOBUG_PAUSED
			object.animation = MOTOBUG_ANI_IDLE
		end if


		// Update exhaust process
		if object.exhaustTimer < 20
			object.exhaustTimer++
		else

			object.exhaustTimer = 0

			// Create the exhaust object
			CreateTempObject(TypeName[Motobug Exhaust], 0, object.xpos, object.ypos)
			
			// Offset the exhaust based on the Motobug's direction
			if object.direction == 0
				object[tempObjectPos].xpos += 0x160000
			else
				object[tempObjectPos].xpos -= 0x160000
			end if

			// Set the object to match the Motobug's direction
			object[tempObjectPos].direction = object.direction

		end if
		break

	case MOTOBUG_PAUSED
		if object.timer < 59
			// Stay still for a moment...
			object.timer++
		else
			// Start moving again
			object.timer = 0

			object.state = MOTOBUG_MOVING
			object.animation = MOTOBUG_ANI_MOVING

			// Flip the Motobug
			object.direction ^= 1
			FlipSign(object.xvel)
		end if
		break

	end switch

	if object.outOfBounds == true

		temp0 = object.xpos
		temp1 = object.ypos

		object.xpos = object.startPos.x
		object.ypos = object.startPos.y

		if object.outOfBounds == true

			if object.propertyValue == 0
				object.direction = FACING_RIGHT
				object.xvel = -0x10000
			else
				object.direction = FACING_LEFT
				object.xvel = 0x10000
			end if

			object.animation = MOTOBUG_ANI_MOVING
			object.priority = PRIORITY_BOUNDS
			object.state = MOTOBUG_MOVING

		else
			object.xpos = temp0
			object.ypos = temp1
		end if

	end if

	// Check collision with players
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		BoxCollisionTest(C_TOUCH, object.entityPos, -14, -14, 14, 14, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		if checkResult == true
			CallFunction(Player_BadnikBreak)
		end if
	next

	if object.animation == MOTOBUG_ANI_MOVING
		object.frame = object.animationTimer
		object.frame >>= 3
		object.animationTimer++
		object.animationTimer &= 31
	end if
end event


event ObjectDraw
	DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup
	// Check which sprites to load based on current folder
	CheckCurrentStageFolder("Zone01")
	if checkResult == true
		LoadSpriteSheet("DDZ/Objects1.gif")
		SpriteFrame(-21, -13, 40, 28, 98, 127)
		SpriteFrame(-20, -14, 39, 29, 139, 127)
		SpriteFrame(-20, -13, 39, 28, 98, 156)
		SpriteFrame(-20, -14, 39, 29, 139, 127)
	end if
	// Setup all Motobugs
	foreach (TypeName[Motobug], arrayPos0, ALL_ENTITIES)

		// Set their base positions
		object[arrayPos0].startPos.x = object[arrayPos0].xpos
		object[arrayPos0].startPos.y = object[arrayPos0].ypos

		// Set their direction based on their propertyValue
		if object[arrayPos0].propertyValue == 0
			object[arrayPos0].direction = FACING_RIGHT
			object[arrayPos0].xvel = -0x10000
		else
			object[arrayPos0].direction = FACING_LEFT
			object[arrayPos0].xvel = 0x10000
		end if
	next

	// Add Motobug to the debug item list
	SetTableValue(TypeName[Motobug], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(Motobug_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(Motobug_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			checkResult &= 1
			break
			
		case 0 // direction
			checkResult = object.propertyValue
			checkResult &= 1
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			object.propertyValue &= 1
			break
			
		case 0 // direction
			object.propertyValue = editor.variableValue
			object.propertyValue &= 1
			break
			
		end switch
	end if
end event


event RSDKDraw
	if object.propertyValue == 0
		object.direction = FACING_RIGHT
	else
		object.direction = FACING_LEFT
	end if

	DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
end event


event RSDKLoad
	// Check which sprites to load based on current folder
	CheckCurrentStageFolder("Zone07")
	if checkResult == true
		// Motobug in in MBZ - load MBZ frames
		
		LoadSpriteSheet("MBZ/Objects.gif")
		SpriteFrame(-21, -13, 40, 28, 170, 145)
	else
		// Thanks to Origins using Motobugs everywhere, just load the GHZ sheet as a fallback, even if not in GHZ
		
		LoadSpriteSheet("DDZ/Objects1.gif")
		SpriteFrame(-21, -13, 40, 28, 98, 127)
	end if

	AddEditorVariable("direction")
	SetActiveVariable("direction")
	AddEnumVariable("Left", 0)
	AddEnumVariable("Right", 1)
end event
