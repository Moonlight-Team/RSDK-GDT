// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Spiny Floor Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.startPos.x
private alias object.value1 : object.startPos.y
private alias object.value2 : object.dirChangeTimer
private alias object.value3 : object.shootTimer
private alias object.value4 : object.shotVelocity
private alias object.value5 : object.targetDistance

private alias 0 : SPINYFLOOR_MOVING
private alias 1 : SPINYFLOOR_IDLE

// Player Aliases
private alias object.xpos : player.xpos
private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom


// ========================
// Function Declarations
// ========================

reserve function SpinyFloor_Setup
reserve function SpinyFloor_DebugDraw
reserve function SpinyFloor_DebugSpawn


// ========================
// Function Definitions
// ========================

private function SpinyFloor_Setup
	object[arrayPos0].xpos = object[arrayPos0].startPos.x
	object[arrayPos0].ypos = object[arrayPos0].startPos.y
	object[arrayPos0].dirChangeTimer = 256
	object[arrayPos0].shootTimer = 128
	object[arrayPos0].frame = 0
	object[arrayPos0].animationTimer = 0
	object[arrayPos0].state = SPINYFLOOR_MOVING
	if object[arrayPos0].propertyValue == 0
		object[arrayPos0].direction = FLIP_NONE
		object[arrayPos0].xvel = -0x4000
	else
		object[arrayPos0].direction = FLIP_X
		object[arrayPos0].xvel = 0x4000
	end if
	object[arrayPos0].priority = PRIORITY_BOUNDS
end function


private function SpinyFloor_DebugDraw
	DrawSprite(0)
end function


private function SpinyFloor_DebugSpawn
	CreateTempObject(TypeName[Spiny Floor], temp0, object.xpos, object.ypos)
	object[tempObjectPos].startPos.x = object.xpos
	object[tempObjectPos].startPos.y = object.ypos
	arrayPos0 = object[tempObjectPos].entityPos
	object[tempObjectPos].propertyValue = object.direction
	CallFunction(SpinyFloor_Setup)
end function


// ========================
// Events
// ========================

event ObjectUpdate
	object.priority = PRIORITY_ACTIVE
	switch object.state
	case SPINYFLOOR_MOVING
		object.dirChangeTimer--
		if object.dirChangeTimer <= 0
			object.dirChangeTimer = 256
			object.shootTimer = 128
			FlipSign(object.xvel)
			object.direction ^= FLIP_X
		end if

		object.xpos += object.xvel

		object.animationTimer++
		if object.animationTimer == 10
			object.animationTimer = 0
			object.frame ^= 1
		end if

		if object.shootTimer == 0
			object.targetDistance = 0x7FFFFFFF
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				BoxCollisionTest(C_TOUCH, object.entityPos, -96, -256, 96, 256, currentPlayer, 1, 1, 1, 1)
				if checkResult == true
					object.shootTimer = 40
					object.frame = 2
					object.state = SPINYFLOOR_IDLE

					temp0 = object.xpos
					temp0 -= player[currentPlayer].xpos
					Abs(temp0)
					if temp0 < object.targetDistance
						object.targetDistance = temp0
						if player[currentPlayer].xpos > object.xpos
							object.shotVelocity = 0x10000
						else
							object.shotVelocity = -0x10000
						end if
					end if
				end if
			next
		else
			object.shootTimer--
		end if
		break

	case SPINYFLOOR_IDLE
		object.shootTimer--
		if object.shootTimer == 20
			CreateTempObject(TypeName[Spiny Shot], 0, object.xpos, object.ypos)
			object[tempObjectPos].xvel = object.shotVelocity
			object[tempObjectPos].yvel = -0x30000
			object[tempObjectPos].drawOrder = 2
		end if

		if object.shootTimer < 0
			object.shootTimer = 64
			object.frame = 0
			object.state = SPINYFLOOR_MOVING
		end if
		break
		
	end switch

	if object.outOfBounds == true
		temp0 = object.xpos
		temp1 = object.ypos
		object.xpos = object.startPos.x
		object.ypos = object.startPos.y
		if object.outOfBounds == true
			arrayPos0 = object.entityPos
			CallFunction(SpinyFloor_Setup)
		else
			object.xpos = temp0
			object.ypos = temp1
		end if
	end if

	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		BoxCollisionTest(C_TOUCH, object.entityPos, -8, -8, 8, 8, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
		if checkResult == true
			CallFunction(Player_BadnikBreak)
		end if
	next
end event


event ObjectDraw
	DrawSprite(object.frame)
end event


event ObjectStartup
	LoadSpriteSheet("CPZ/Objects.gif") // this was probably meant to be removed when MBZ became a thing, makes no real difference whether its here or not though

	CheckCurrentStageFolder("Zone02")
	if checkResult == true
		LoadSpriteSheet("CPZ/Objects.gif")
		SpriteFrame(-24, -11, 48, 23, 1, 1)
		SpriteFrame(-22, -11, 44, 23, 50, 1)
		SpriteFrame(-24, -11, 48, 23, 95, 1)
	else
		LoadSpriteSheet("MBZ/Objects.gif")
		SpriteFrame(-24, -11, 48, 23, 131, 256)
		SpriteFrame(-22, -11, 44, 23, 180, 256)
		SpriteFrame(-24, -11, 48, 23, 225, 256)
	end if

	foreach (TypeName[Spiny Floor], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].startPos.x = object[arrayPos0].xpos
		object[arrayPos0].startPos.y = object[arrayPos0].ypos
		CallFunction(SpinyFloor_Setup)
	next

	SetTableValue(TypeName[Spiny Floor], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(SpinyFloor_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(SpinyFloor_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			checkResult &= 1
			break
			
		case 0 // direction
			GetBit(checkResult, object.propertyValue, 0)
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			object.propertyValue &= 1
			break
			
		case 0 // direction
			CheckNotEqual(editor.variableValue, 0)
			SetBit(object.propertyValue, 0, checkResult)
			break
			
		end switch
	end if
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	CheckCurrentStageFolder("Zone02")
	if checkResult == true
		LoadSpriteSheet("CPZ/Objects.gif")
		SpriteFrame(-24, -11, 48, 23, 1, 1)
	else
		LoadSpriteSheet("MBZ/Objects.gif")
		SpriteFrame(-24, -11, 48, 23, 131, 256)
	end if

	AddEditorVariable("direction")
	SetActiveVariable("direction")
	AddEnumVariable("Left", 0)
	AddEnumVariable("Right", 1)
end event
