// ----------------------------------
// RSDK Project: RSDK-GDT 
// Script Description: CD Menu Button
// Script Author: Christian Whitehead adapted with the RSDK Script Converter to v4 and with manual modifications by Zero242
// Original v3/CD Script Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value0 : Object.Timer
private alias object.value1 : Object.ButtonXOffSet
private alias object.value2 : Object.ButtonYOffSet
private alias object.value3 : Object.ButtonLeaveXPos
private alias object.value4 : Object.ButtonLeaveYPos
private alias object.value5 : Object.ButtonYPos

// Object[1] is a blank object just to share values
private alias object[1].value1 : Object.RecenterValue
private alias object[1].value2 : Object.ButtonCount
private alias object[1].value3 : Object.DragLimit

// MenuHeading Aliases
private alias object[33].state : MenuHeading.State
private alias object[33].propertyValue : MenuHeading.Header

// Object[-1] and [+1] are MenuButton's
private alias object[-1].state : PrevMenuButton.State
private alias object[+1].state : NextMenuButton.State

// MenuControl Aliases
private alias object[0].state : MenuControl.State
private alias object[0].value0 : MenuControl.Fade
private alias object[0].value1 : MenuControl.ButtonYOffset
private alias object[0].value2 : MenuControl.CurrentDrag
private alias object[0].value3 : MenuControl.CurrentSelection
private alias object[0].value7 : MenuControl.SmoothDrag

// MenuWindow Aliases
private alias object[61].state : MenuWindow.State
private alias object[61].xpos : MenuWindow.XPos
private alias object[61].ypos : MenuWindow.YPos
private alias object[61].value1 : MenuWindow.BaseWidth
private alias object[61].value2 : MenuWindow.BaseHeight
private alias object[61].value3 : MenuWindow.BaseXOffset
private alias object[61].value4 : MenuWindow.BaseYOffset
private alias object[61].value5 : MenuWindow.EntityPos

// Object[62] is whatever next menu is this object going to be set into
private alias object[62].inkEffect : Object.NextMenuInkEffect
private alias object[62].alpha : Object.NextMenuAlpha

// States
private alias 0 : MENUBUTTON_DELAY
private alias 1 : MENUBUTTON_BUTTONS_IN
private alias 2 : MENUBUTTON_CONFIRM_SELECTION
private alias 3 : MENUBUTTON_MENU_SELECTED
private alias 4 : MENUBUTTON_BUTTONS_OUT
private alias 5 : MENUBUTTON_BLANK
private alias 6 : MENUBUTTON_BLANK2
private alias 7 : MENUBUTTON_RESET

// Menu Control States
private alias 2 : MENUCONTROL_CONTROLS
private alias 3 : MENUCONTROL_BLANK
private alias 4 : MENUCONTROL_ENTER_TIMEATTACK
private alias 5 : MENUCONTROL_ENTER_DEMO
private alias 7 : MENUCONTROL_ENTER_TROPHIES
private alias 8 : MENUCONTROL_ENTER_LEADERBOARDS
private alias 9 : MENUCONTROL_ENTER_LEVELSELECT

// Menu Window States
private alias 5 : MENUWINDOW_SOUNDTRACK_EXPAND

// Menu Heading States
private alias 0 : MENUHEADING_IDLE
private alias 1 : MENUHEADING_LEAVE_SCREEN
private alias 2 : MENUHEADING_ENTER_SCREEN

// Menu Heading Property Values
private alias 5 : MAINMENU_HEADER
private alias 6 : SAVESELECT_HEADER
private alias 7 : HELP&OPTIONS_HEADER
private alias 8 : EXTRAS_HEADER
private alias 9 : SOUNDTRACK_HEADER
private alias 10 : STAGESELECT_HEADER

// Menus
private alias 1 : Menu_LoadSaveMenu
private alias 2 : Menu_TimeAttack
private alias 3 : Menu_Achievements
private alias 4 : Menu_LeaderBoards
private alias 5 : Menu_Help&Options
private alias 6 : Menu_Extras
private alias 7 : Menu_UnlockFullGame
private alias 8 : Menu_Store
private alias 9 : Menu_Exit
private alias 10 : Menu_Soundtrack
private alias 11 : Menu_MoreGames

// Ink Effects
private alias 2 : INK_ALPHA

// Priority
private alias 1 : PRIORITY_ACTIVE

// Game Mode Aliases
private alias 0 : MODE_NOSAVE

// Languages
private alias 0 : LANG_ENGLISH
private alias 1 : LANG_FRENCH
private alias 2 : LANG_ITALIAN
private alias 3 : LANG_DEUTSCH
private alias 4 : LANG_SPANISH
private alias 5 : LANG_JAPANESE

// Global SFX
private alias 27 : SFX_G_SELECT

// Engine & Callbacks
private alias 3 : ENGINE_EXITGAME
private alias 5 : CALLBACK_RETURNSTORE_SELECTED
private alias 7 : CALLBACK_EXIT_SELECTED
private alias 8 : CALLBACK_BUY_FULL_GAME_SELECTED
private alias 14 : CALLBACK_FULL_VERSION_ONLY
private alias 16 : CALLBACK_MOREGAMES

// Online Menus
private alias 0 : ONLINEMENU_ACHIEVEMENTS
private alias 1 : ONLINEMENU_LEADERBOARDS

// game.mainMenuMode Aliases
private alias 0 : MAINMENUMODE_NONE // Starts with this, but gets swapped on MenuButton


// Function declarations
reserve function MenuButton_SetupMenuWindow

public function MenuButton_SetupMenuWindow
	ResetObjectEntity(61, TypeName[Menu Window], 0, object.xpos, object.ypos)
	MenuWindow.XPos += 0x480000
	MenuWindow.BaseWidth = 144
	MenuWindow.BaseHeight = 21
	MenuWindow.BaseXOffset = MenuWindow.XPos
	MenuWindow.BaseYOffset = MenuWindow.YPos
	MenuWindow.EntityPos = object.entityPos
end function


event ObjectUpdate
	Object.ButtonYOffSet = Object.ButtonYPos
	Object.ButtonYOffSet--
	Object.ButtonYOffSet *= 60
	Object.ButtonYOffSet += MenuControl.ButtonYOffset

	temp0 = screen.xcenter
	temp0 -= 160

	Object.ButtonXOffSet = Object.ButtonYOffSet
	Object.ButtonXOffSet *= 54
	Object.ButtonXOffSet /= 60
	Object.ButtonXOffSet -= 16
	Object.ButtonXOffSet += temp0

	switch object.state
	case MENUBUTTON_DELAY
		if Object.Timer < 60
			Object.Timer++
		else
			Object.Timer = 0
			object.state++
		end if
		break

	case MENUBUTTON_BUTTONS_IN
		temp0 = Object.ButtonXOffSet
		temp0 <<= 16
		temp0 -= object.xpos
		temp0 >>= 4
		object.xpos += temp0

		temp0 = Object.ButtonYOffSet
		temp0 <<= 16
		temp0 -= object.ypos
		temp0 >>= 4
		object.ypos += temp0

		if Object.Timer < 80
			Object.Timer++
		else
			Object.Timer = 0
			object.state++
		end if
		break

	case MENUBUTTON_CONFIRM_SELECTION
		object.xpos = Object.ButtonXOffSet
		object.xpos <<= 16

		object.ypos = Object.ButtonYOffSet
		object.ypos <<= 16
		CheckEqual(Options.PhysicalControls, false)
		if checkResult == true
			temp0 = Object.ButtonXOffSet
			temp0 -= 16
			temp1 = Object.ButtonXOffSet
			temp1 += 176
			temp2 = Object.ButtonYOffSet
			temp2 -= 20
			temp3 = Object.ButtonYOffSet
			temp3 += 20
			CheckTouchRect(temp0, temp2, temp1, temp3)
			if checkResult > -1
				temp0 = MenuControl.SmoothDrag
				temp0 >>= 2
				if temp0 == 0
					if Object.RecenterValue == 0
						MenuControl.CurrentDrag = Object.ButtonYPos
					end if
				end if
			else
				CheckTouchRect(0, 0, screen.xsize, screen.ysize)
				if checkResult < 0
					if MenuControl.CurrentDrag == Object.ButtonYPos
						if Object.RecenterValue == 0
							PlaySfx(SfxName[Menu Select], false)
							MenuControl.State = MENUCONTROL_BLANK
							switch object.propertyValue
							case Menu_LoadSaveMenu
							case Menu_Help&Options
							case Menu_Extras
							case Menu_Soundtrack //All of this is MenuButton
								object[34].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[34] = 0
								object[35].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[35] = 0
								object[36].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[36] = 0
								object[37].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[37] = 0
								object[38].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[38] = 0
								object[39].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[39] = 0
								object[40].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[40] = 0
								object[41].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[41] = 0
								object[42].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[42] = 0
								object[43].state = MENUBUTTON_BUTTONS_OUT
								Object.Timer[43] = 0
								break

							case Menu_TimeAttack
								if engine.trialMode == false
									StopMusic()
									object[34].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[34] = 0
									object[35].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[35] = 0
									object[36].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[36] = 0
									object[37].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[37] = 0
									object[38].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[38] = 0
									object[39].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[39] = 0
									object[40].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[40] = 0
									object[41].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[41] = 0
									object[42].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[42] = 0
									object[43].state = MENUBUTTON_BUTTONS_OUT
									Object.Timer[43] = 0
								end if
								break

							end switch
							object.state = MENUBUTTON_MENU_SELECTED
						end if
					end if
				else
					if MenuControl.CurrentDrag == Object.ButtonYPos
						MenuControl.CurrentDrag = 0
					end if
				end if
			end if
		else
			if Object.ButtonYPos == MenuControl.CurrentSelection
				checkResult = false
				if keyPress[0].start == true
					checkResult = true
				end if

				if keyPress[0].buttonA == true
					checkResult = true
				end if

				if object.propertyValue == Menu_Achievements
					if engine.onlineActive == false
						checkResult = false
					end if
				end if

				if checkResult == true
					PlaySfx(SfxName[Menu Select], false)
					if engine.trialMode == true
						if object.propertyValue == Menu_LoadSaveMenu
							StopMusic()
						end if
					else
						if object.propertyValue == Menu_TimeAttack
							StopMusic()
						end if
					end if

					MenuControl.State = MENUCONTROL_BLANK
					switch object.propertyValue
					case Menu_LoadSaveMenu
					case Menu_Help&Options
					case Menu_Extras
					case Menu_Soundtrack
						object[34].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[34] = 0
						object[35].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[35] = 0
						object[36].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[36] = 0
						object[37].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[37] = 0
						object[38].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[38] = 0
						object[39].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[39] = 0
						object[40].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[40] = 0
						object[41].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[41] = 0
						object[42].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[42] = 0
						object[43].state = MENUBUTTON_BUTTONS_OUT
						Object.Timer[43] = 0
						break

					case Menu_TimeAttack
						if engine.trialMode == false
							object[34].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[34] = 0
							object[35].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[35] = 0
							object[36].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[36] = 0
							object[37].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[37] = 0
							object[38].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[38] = 0
							object[39].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[39] = 0
							object[40].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[40] = 0
							object[41].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[41] = 0
							object[42].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[42] = 0
							object[43].state = MENUBUTTON_BUTTONS_OUT
							Object.Timer[43] = 0
						end if
						break

					end switch
					object.state = MENUBUTTON_MENU_SELECTED
				end if
			end if
		end if
		break

	case MENUBUTTON_MENU_SELECTED
		if Object.Timer < 30
			Object.Timer++
		else
			Object.Timer = 0
			switch object.propertyValue
			case Menu_LoadSaveMenu
				if engine.trialMode == false
					MenuHeading.State = MENUHEADING_LEAVE_SCREEN
					MenuHeading.Header = SAVESELECT_HEADER

					CallFunction(MenuButton_SetupMenuWindow)
					ResetObjectEntity(62, TypeName[Load Save Menu], 0, 0, 0)

					Object.NextMenuInkEffect = INK_ALPHA
					Object.NextMenuAlpha = 0

					ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)
					object.type = TypeName[Blank Object]
					ReadSaveRAM()
				else
					MenuHeading.State = MENUHEADING_LEAVE_SCREEN
					MenuHeading.Header = STAGESELECT_HEADER

					CallFunction(MenuButton_SetupMenuWindow)
					MenuWindow.State = MENUWINDOW_SOUNDTRACK_EXPAND
					ResetObjectEntity(62, TypeName[Demo Menu], 0, 0, 0)

					Object.NextMenuInkEffect = INK_ALPHA
					Object.NextMenuAlpha = 0

					ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
					ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)
					object.type = TypeName[Blank Object]
					ReadSaveRAM()
				end if
				break

			case Menu_TimeAttack
				if engine.trialMode == false
					object.state = MENUBUTTON_BLANK

					MenuControl.State = MENUCONTROL_ENTER_TIMEATTACK
					MenuControl.Fade = 0
				else
					object.state = MENUBUTTON_CONFIRM_SELECTION

					MenuControl.State = MENUCONTROL_CONTROLS
// WARNING: Function FUNC_ENGINECALLBACK does not exist in RSDKv4!
// Arguments: CALLBACK_FULL_VERSION_ONLY
					MenuControl.CurrentDrag = 0
				end if
				break

			case Menu_Achievements
				MenuControl.State = MENUCONTROL_CONTROLS
				Object.State  = MENUBUTTON_CONFIRM_SELECTION
				MenuControl.Fade  = 0
				break

			case Menu_LeaderBoards
				MenuControl.State = MENUCONTROL_CONTROLS
				Object.State  = MENUBUTTON_CONFIRM_SELECTION
				MenuControl.Fade  = 0
				break
				
			case Menu_Help&Options
				MenuHeading.State = MENUHEADING_LEAVE_SCREEN
				MenuHeading.Header = HELP&OPTIONS_HEADER

				CallFunction(MenuButton_SetupMenuWindow)
				ResetObjectEntity(62, TypeName[Options Menu], 0, 0, 0)
				Object.NextMenuInkEffect = INK_ALPHA
				Object.NextMenuAlpha = 0

				ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)
				object.type = TypeName[Blank Object]
				break

			case Menu_Extras
				object.state = MENUBUTTON_BLANK

				MenuControl.State = MENUCONTROL_ENTER_TIMEATTACK
				MenuControl.Fade = 0

				ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)
				break

			case Menu_UnlockFullGame
				object.state = MENUBUTTON_CONFIRM_SELECTION

				MenuControl.State = MENUCONTROL_CONTROLS
				MenuControl.CurrentDrag = 0
				break

			case Menu_Store
				object.state = MENUBUTTON_CONFIRM_SELECTION

				MenuControl.State = MENUCONTROL_CONTROLS
				MenuControl.CurrentDrag = 0
				break

			case Menu_Exit
				StopMusic()
				object.state = MENUBUTTON_BLANK

				MenuControl.State = MENUCONTROL_ENTER_TIMEATTACK
				MenuControl.Fade = 0

				ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)

			case Menu_Soundtrack
				//object.state = MENUBUTTON_BLANK
				//MenuControl.State = MENUCONTROL_ENTER_LEVELSELECT
				//MenuControl.Fade = 0
				MenuHeading.State = MENUHEADING_LEAVE_SCREEN
				MenuHeading.Header = SOUNDTRACK_HEADER

				CallFunction(MenuButton_SetupMenuWindow)
				MenuWindow.State = MENUWINDOW_SOUNDTRACK_EXPAND
				ResetObjectEntity(62, TypeName[Soundtrack Menu], 0, 0, 0)

				Object.NextMenuInkEffect = INK_ALPHA
				Object.NextMenuAlpha = 0

				ResetObjectEntity(63, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(64, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(65, TypeName[Blank Object], 0, 0, 0)
				ResetObjectEntity(66, TypeName[Blank Object], 0, 0, 0)
				object.type = TypeName[Blank Object]
				break
			end switch
		end if
		break

	case MENUBUTTON_BUTTONS_OUT
		temp0 = Object.ButtonLeaveXPos
		temp0 -= object.xpos
		temp0 >>= 4
		object.xpos += temp0

		temp0 = Object.ButtonLeaveYPos
		temp0 -= object.ypos
		temp0 >>= 4
		object.ypos += temp0

		if Object.Timer < 80
			Object.Timer++
		else
			Object.Timer = 0
			object.state = MENUBUTTON_BLANK2
		end if
		break

	case MENUBUTTON_BLANK
	case MENUBUTTON_BLANK2
		if object.propertyValue == Menu_Extras
			if MenuControl.Fade >= 320
				CallNativeFunction(OpenModMenu)
			end if
		end if
		if object.propertyValue == Menu_Exit
			if MenuControl.Fade >= 320
				CallNativeFunction(ExitGame)
			end if
		end if
		break

	case MENUBUTTON_RESET //Used by MenuWindow
		if object.propertyValue >= Menu_Extras
			if PrevMenuButton.State == MENUBUTTON_CONFIRM_SELECTION
				object.state = MENUBUTTON_CONFIRM_SELECTION

				MenuControl.State = MENUCONTROL_CONTROLS
				MenuControl.CurrentDrag = 0
			end if
		else
			if NextMenuButton.State == MENUBUTTON_CONFIRM_SELECTION
				object.state = MENUBUTTON_CONFIRM_SELECTION

				MenuControl.State = MENUCONTROL_CONTROLS
				MenuControl.CurrentDrag = 0
			end if
		end if
		break

	end switch
end event



event ObjectDraw
	DrawSprite(0)
	switch object.state
	case MENUBUTTON_DELAY
	case MENUBUTTON_BUTTONS_IN
	case MENUBUTTON_CONFIRM_SELECTION
	case MENUBUTTON_BUTTONS_OUT
	case MENUBUTTON_BLANK
	case MENUBUTTON_RESET
		if Object.ButtonYPos == MenuControl.CurrentSelection
			temp0 = object.propertyValue
			temp0 += 11
			DrawSprite(temp0)
		else
			DrawSprite(object.propertyValue)
		end if
		break

	case MENUBUTTON_MENU_SELECTED
		temp0 = Object.Timer
		temp0 &= 3
		temp0 >>= 1
		if temp0 == 0
			temp0 = object.propertyValue
			temp0 += 11

			DrawSprite(temp0)
		end if
		break

	end switch
end event


event ObjectStartup
	switch engine.language
	case LANG_ENGLISH
		LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
		break
	case LANG_FRENCH
		LoadSpriteSheet("Menu/MenuGfx2_FR.gif")
		break
	case LANG_ITALIAN
		LoadSpriteSheet("Menu/MenuGfx2_IT.gif")
		break
	case LANG_DEUTSCH
		LoadSpriteSheet("Menu/MenuGfx2_DE.gif")
		break
	case LANG_SPANISH
		LoadSpriteSheet("Menu/MenuGfx2_ES.gif")
		break
	case LANG_JAPANESE
		LoadSpriteSheet("Menu/MenuGfx2_JP.gif")
		break
	end switch

	Object.ButtonCount = 1
	arrayPos0 = 32
	while arrayPos0 < 1056
		if object[arrayPos0].type == TypeName[Menu Button]
			object[arrayPos0].priority = PRIORITY_ACTIVE
			Object.ButtonLeaveXPos[arrayPos0] = object[arrayPos0].xpos
			Object.ButtonLeaveYPos[arrayPos0] = Object.ButtonLeaveYPos[arrayPos0]
		end if
		arrayPos0++
	loop
	object[34].propertyValue = Menu_LoadSaveMenu
	object[35].propertyValue = Menu_TimeAttack
	object[36].propertyValue = Menu_Achievements
	object[37].propertyValue = Menu_Help&Options
	object[38].propertyValue = Menu_Soundtrack
	object[39].propertyValue = Menu_Extras
	object[40].propertyValue = Menu_Exit
	Object.ButtonCount = 7
	arrayPos0 = 34
	temp0 = 0
	while temp0 < Object.ButtonCount
		Object.ButtonYPos[arrayPos0] = temp0
		Object.ButtonYPos[arrayPos0]++
		arrayPos0++
		temp0++
	loop

	while temp0 < 9
		object[arrayPos0].type = TypeName[Blank Object]
		arrayPos0++
		temp0++
	loop

	Object.DragLimit = Object.ButtonCount
	Object.DragLimit *= -30
	Object.DragLimit <<= 8
	SpriteFrame(0, -10, 144, 21, 259, 71) // #0 - Button
	temp0 = 0
	temp1 = 18
	// (#1 - #2) - Start Game, Time Attack
	while temp0 < 2
		SpriteFrame(19, -7, 128, 16, 1, temp1)
		temp1 += 17
		temp0++
	loop
	// #3 - Achievements/ Trophies
		switch engine.language
		case LANG_ENGLISH
		case LANG_FRENCH
		case LANG_SPANISH
		case LANG_JAPANESE
			SpriteFrame(19, -7, 128, 16, 1, temp1)
			break

		case LANG_ITALIAN
		case LANG_DEUTSCH
			SpriteFrame(19, -7, 128, 16, 1, 770)
			break

		end switch

	temp1 += 17
	temp0++
	// #4 - Leaderboards
	if engine.onlineActive == false
		SpriteFrame(19, -7, 128, 16, 130, 460)
	else
		SpriteFrame(19, -7, 128, 16, 1, temp1)
	end if
	temp1 += 17
	temp0++
	// (#5 - #6) - Help & Options, Extras
	while temp0 < 6
		SpriteFrame(19, -7, 128, 16, 1, temp1)
		temp1 += 17
		temp0++
	loop
	temp0 = 0
	temp1 = 547
	// (#7 - #10) - Remove Ads(Mobile)/Unlock Full Game(Console), Unlock Full Game(Mobile)/Return to Arcade(Xbox), Exit Game, Soundtrack
	while temp0 < 4
		SpriteFrame(19, -7, 128, 16, 1, temp1)
		temp1 += 17
		temp0++
	loop

	SpriteFrame(19, -7, 128, 16, 130, 120)
	// Highlight Text
	temp0 = 0
	temp1 = 18
	// (#11 - #12 Standard, #12 - #13 Mobile) - Start Game, Time Attack
	while temp0 < 2
		SpriteFrame(19, -7, 128, 16, 130, temp1)
		temp1 += 17
		temp0++
	loop

	temp0++
	// (#14 - #16 Standard, #15 - #17 Mobile) - Leaderboards, Help & Options, Extras
	while temp0 < 4
		SpriteFrame(19, -7, 128, 16, 130, temp1)
		temp1 += 17
		temp0++
	loop

	SpriteFrame(19, -7, 128, 16, 130, 598)
	SpriteFrame(19, -7, 128, 16, 130, 86)
	SpriteFrame(19, -7, 128, 16, 130, 103)
	SpriteFrame(19, -7, 128, 16, 130, 86)
	SpriteFrame(19, -7, 128, 16, 130, 86)
	SpriteFrame(19, -7, 128, 16, 130, 581)

	SpriteFrame(19, -7, 128, 16, 130, 598)
end event

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
	SpriteFrame(0, -10, 144, 21, 259, 71) // #0 - Button
end event
