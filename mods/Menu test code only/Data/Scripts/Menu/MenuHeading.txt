// ----------------------------------
// RSDK Project: RSDK-GDT 
// Script Description: CD Menu Heading
// Script Author: Christian Whitehead adapted with the RSDK Script Converter to v4 and with manual modifications by Zero242
// Original v3/CD Script Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.propertyValue : Object.Header
private alias object.value0 : Object.Timer
private alias object.value1 : Object.YOffset
private alias object.value2 : Object.XOffset
private alias object.value3 : Object.Angle
private alias object.value4 : Object.GFX1
private alias object.value5 : Object.GFX2

// Object[1] is a blank object just to share values
private alias object[1].value2 : Object.MaxButtonCount

//MenuHeading_CheckTouchBack Specific Values
private alias object.value1 : CurrentMenu.ButtonPressed //Current Menu Button Pressed
private alias object[1].value4 : Object.BackTouchPress

// States
private alias 0 : MENUHEADING_IDLE
private alias 1 : MENUHEADING_LEAVE_SCREEN
private alias 2 : MENUHEADING_ENTER_SCREEN

// Property Values
private alias 5 : MAINMENU_HEADER
private alias 6 : SAVESELECT_HEADER
private alias 7 : HELP&OPTIONS_HEADER
private alias 8 : EXTRAS_HEADER
private alias 9 : SOUNDTRACK_HEADER
private alias 10 : STAGESELECT_HEADER

// Ink Effects
private alias 2 : INK_ALPHA

// Languages
private alias 0 : LANG_ENGLISH
private alias 1 : LANG_FRENCH
private alias 2 : LANG_ITALIAN
private alias 3 : LANG_DEUTSCH
private alias 4 : LANG_SPANISH
private alias 5 : LANG_JAPANESE

//Engine & CallBacks
private alias 2 : MESSAGE_LOSTFOCUS

// Device Type
private alias 0 : RETRO_STANDARD

// Function declarations
reserve function MenuHeading_CheckTouchBack


public function MenuHeading_CheckTouchBack //This is used by other scripts to check if the back touch button is pressed
// WARNING: Variable VAR_ENGINEMESSAGE does not exist in RSDKv4!
	temp0 = screen.xsize
	temp0 -= 76
	CheckTouchRect(temp0, 192, screen.xsize, screen.ysize)
	if checkResult > -1
		CurrentMenu.ButtonPressed = 5
		Object.BackTouchPress = true
	else
		Object.BackTouchPress = false
		if temp3 < 0
			if CurrentMenu.ButtonPressed == 5
				keyPress[0].buttonB = true
			end if
		else
			if CurrentMenu.ButtonPressed == 5
				CurrentMenu.ButtonPressed = -1
			end if
		end if
	end if
end function


event ObjectUpdate
	switch object.state
	case MENUHEADING_LEAVE_SCREEN
		if Object.Timer < 16
			Object.Timer++
			Object.XOffset -= 16
		else
			object.frame = Object.Header
			Object.Timer = 0
			object.state++
		end if

		if object.alpha == 255
			object.alpha = 240
		else
			if object.alpha > 0
				object.alpha -= 16
			end if
		end if
		break

	case MENUHEADING_ENTER_SCREEN
		if Object.Timer < 16
			Object.Timer++
			Object.XOffset += 16
		else
			Object.Timer = 0
			object.state = MENUHEADING_IDLE
		end if

		if Object.Header == MAINMENU_HEADER
			if object.alpha == 240
				object.alpha = 255
			else
				if object.alpha < 255
					object.alpha += 16
				end if
			end if
		end if
		break

	end switch
end event


event ObjectDraw
	//Draw BG Details
	Object.YOffset--
	Object.YOffset %= 240
	object.spriteSheet = Object.GFX1
	DrawSpriteScreenXY(1, screen.xcenter, Object.YOffset)
	DrawSpriteScreenXY(2, screen.xcenter, Object.YOffset)
	DrawSpriteScreenXY(0, screen.xcenter, 20)

	temp0 = screen.xcenter
	temp0 += 200
	DrawRect(temp0, 20, screen.xsize, 9, 0, 0, 0, 255)
	temp0 = screen.xcenter
	temp0 += 12
	DrawRect(0, 212, temp0, 13, 0, 0, 0, 255)

	//Draw Menu Header
	object.spriteSheet = Object.GFX2
	temp0 = screen.xcenter
	temp0 -= 160
	temp0 >>= 2
	temp0 += Object.XOffset
	DrawSpriteScreenXY(object.frame, temp0, 194)

	//Draw Detail Arrows (Standard) / Drag Arrows (Mobile)
	object.spriteSheet = Object.GFX1

	Object.Angle += 4
	Object.Angle &= 511

	temp0 = screen.xsize
	temp0 -= 40
	//Check if the menu needs dragging to reach all the buttons
	if Object.MaxButtonCount > 4
		Sin(temp1, Object.Angle)
		temp1 >>= 6
		temp1 += 96
		DrawSpriteScreenFX(3, FX_INK, temp0, temp1)

		Sin(temp1, Object.Angle)
		temp1 /= -64
		temp1 += 144
		DrawSpriteScreenFX(4, FX_INK, 40, temp1)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Menu/MenuGfx1_EN.gif")
	arrayPos0 = 32
	while arrayPos0 < 1056
		if object[arrayPos0].type == TypeName[Menu Heading]
			object[arrayPos0].frame = 5
			object[arrayPos0].alpha = 255
			Object.Header[arrayPos0] = MAINMENU_HEADER
			object[arrayPos0].inkEffect = INK_ALPHA
			Object.XOffset[arrayPos0] = -256
			object[arrayPos0].state = MENUHEADING_ENTER_SCREEN
			LoadSpriteSheet("Menu/MenuGfx1_EN.gif")
			Object.GFX1[arrayPos0] = object[arrayPos0].spriteSheet
			switch engine.language
			case LANG_ENGLISH
				LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
				break
			case LANG_FRENCH
				LoadSpriteSheet("Menu/MenuGfx2_FR.gif")
				break
			case LANG_ITALIAN
				LoadSpriteSheet("Menu/MenuGfx2_IT.gif")
				break
			case LANG_DEUTSCH
				LoadSpriteSheet("Menu/MenuGfx2_DE.gif")
				break
			case LANG_SPANISH
				LoadSpriteSheet("Menu/MenuGfx2_ES.gif")
				break
			case LANG_JAPANESE
				LoadSpriteSheet("Menu/MenuGfx2_JP.gif")
				break
			end switch
			Object.GFX2[arrayPos0] = object[arrayPos0].spriteSheet
		end if
		arrayPos0++
	loop
	//MenuGfx1
	SpriteFrame(12, 0, 216, 9, 1, 225) // #0 Sonic The Hedgehog CD Bar

	SpriteFrame(8, 0, 8, 240, 503, 1) // #1 Vertical Line 1
	SpriteFrame(8, 240, 8, 240, 503, 1) // #2 Vertical Line 

	// Slight modification, in origins this was a normal "if Engine.DeviceType == RETRO_STANDARD", written like this to help with compatibility
	if Engine.DeviceType == RETRO_STANDARD
		checkResult = true //standar es tru xd
	end if
	if checkResult == true
		SpriteFrame(-11, -36, 22, 72, 418, 366) // #3 Up Arrow
		SpriteFrame(-11, -36, 22, 72, 441, 366) // #4 Down Arrow
	else
		switch engine.language
		case LANG_ENGLISH
		case LANG_JAPANESE
			SpriteFrame(-11, -36, 22, 72, 418, 1) // #3 Up Arrow
			SpriteFrame(-11, -36, 22, 72, 441, 1) // #4 Down Arrow
			break

		case LANG_FRENCH
			SpriteFrame(-11, -36, 22, 72, 418, 74) // #3 Up Arrow
			SpriteFrame(-11, -36, 22, 72, 441, 74) // #4 Down Arrow
			break

		case LANG_ITALIAN
			SpriteFrame(-11, -36, 22, 72, 418, 147) // #3 Up Arrow
			SpriteFrame(-11, -36, 22, 72, 441, 147) // #4 Down Arrow
			break

		case LANG_DEUTSCH
			SpriteFrame(-11, -36, 22, 72, 418, 220) // #3 Up Arrow
			SpriteFrame(-11, -36, 22, 72, 441, 220) // #4 Down Arrow
			break

		case LANG_SPANISH
			SpriteFrame(-11, -36, 22, 72, 418, 293) // #3 Up Arrow
			SpriteFrame(-11, -36, 22, 72, 441, 293) // #4 Down Arrow
			break

		end switch
	end if
	//MenuGfx2
	switch engine.language
	case LANG_ENGLISH
	case LANG_JAPANESE
		SpriteFrame(32, 0, 160, 30, 1, 615) // #5 Main Menu
		SpriteFrame(32, 0, 160, 30, 1, 646) // #6 Save Select
		SpriteFrame(16, 0, 160, 30, 1, 677) // #7 Help & Options
		SpriteFrame(32, 0, 160, 30, 1, 708) // #8 Extras
		SpriteFrame(24, 0, 160, 30, 1, 739) // #9 Soundtrack
		SpriteFrame(24, 0, 160, 30, 1, 770) // #10 Stage Select (Used in Trial versions, this will be a blank sprite in steam, but we cannot see it there anyways)
		break

	case LANG_FRENCH
		SpriteFrame(12, 0, 160, 30, 1, 615) // #5 Main Menu
		SpriteFrame(20, 0, 160, 30, 1, 646) // #6 Save Select
		SpriteFrame(14, 0, 160, 30, 1, 677) // #7 Help & Options
		SpriteFrame(32, 0, 160, 30, 1, 708) // #8 Extras
		SpriteFrame(10, 0, 160, 30, 1, 739) // #9 Soundtrack
		SpriteFrame(24, 0, 160, 30, 1, 770) // #10 Stage Select (Used in Trial versions, this will be a blank sprite in steam, but we cannot see it there anyways)

		break
	case LANG_ITALIAN
		SpriteFrame(8, 0, 160, 30, 1, 615) // #5 Main Menu
		SpriteFrame(32, 0, 160, 30, 1, 646) // #6 Save Select
		SpriteFrame(14, 0, 160, 30, 1, 677) // #7 Help & Options
		SpriteFrame(32, 0, 160, 30, 1, 708) // #8 Extras
		SpriteFrame(8, 0, 160, 30, 1, 739) // #9 Soundtrack
		SpriteFrame(24, 0, 160, 30, 1, 770) // #10 Stage Select (Used in Trial versions, this will be a blank sprite in steam, but we cannot see it there anyways)

		break
	case LANG_DEUTSCH
		SpriteFrame(24, 0, 160, 30, 1, 615) // #5 Main Menu
		SpriteFrame(16, 0, 160, 30, 1, 646) // #6 Save Select
		SpriteFrame(6, 0, 160, 30, 1, 677) // #7 Help & Options
		SpriteFrame(32, 0, 160, 30, 1, 708) // #8 Extras
		SpriteFrame(24, 0, 160, 30, 1, 739) // #9 Soundtrack
		SpriteFrame(24, 0, 160, 30, 1, 770) // #10 Stage Select (Used in Trial versions, this will be a blank sprite in steam, but we cannot see it there anyways)

		break
	case LANG_SPANISH
		SpriteFrame(16, 0, 160, 30, 1, 615) // #5 Main Menu
		SpriteFrame(16, 0, 160, 30, 1, 646) // #6 Save Select
		SpriteFrame(8, 0, 160, 30, 1, 677) // #7 Help & Options
		SpriteFrame(32, 0, 160, 30, 1, 708) // #8 Extras
		SpriteFrame(6, 0, 160, 30, 1, 739) // #9 Soundtrack
		SpriteFrame(24, 0, 160, 30, 1, 770) // #10 Stage Select (Used in Trial versions, this will be a blank sprite in steam, but we cannot see it there anyways)

		break
	end switch
end event


// ========================
// Editor Subs
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Menu/MenuGfx2_EN.gif")
	SpriteFrame(32, 0, 160, 30, 1, 615) // #5 Main Menu

	// Although used by the object, it's not to be set from the editor

end event
